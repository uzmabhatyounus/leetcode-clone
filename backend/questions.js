const questions1 = [
  {
    id: 1,
    title: "Two Sum",
    question: "Find two indices that add up to a target.",
    description: "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
    inputDescription: "nums: number[], target: number",
    outputDescription: "number[] — two indices",
    difficulty: "Easy",
    acceptance: "45.3%",
    exampleInput: 'nums = [2,7,11,15], target = 4',
    exampleOutput: '[0,1]',
  },
  {
    id: 2,
    title: "Reverse Integer",
    question: "Reverse digits of an integer.",
    description: "Given a signed 32-bit integer x, return x with its digits reversed. Return 0 if reversal causes overflow.",
    inputDescription: "x: number",
    outputDescription: "number",
    difficulty: "Medium",
    acceptance: "27.6%",
    exampleInput: 'x = 123',
    exampleOutput: '321',
  },
  {
    id: 3,
    title: "Palindrome Number",
    question: "Check if integer reads same forwards/backwards.",
    description: "Given an integer x, return true if x is palindrome integer.",
    inputDescription: "x: number",
    outputDescription: "boolean",
    difficulty: "Easy",
    acceptance: "54.7%",
    exampleInput: 'x = 121',
    exampleOutput: 'true',
  },
  {
    id: 4,
    title: "Roman to Integer",
    question: "Convert Roman numeral to integer.",
    description: "Convert a roman numeral string to an integer.",
    inputDescription: "s: string",
    outputDescription: "number",
    difficulty: "Easy",
    acceptance: "61.2%",
    exampleInput: 's = "MCMXCIV"',
    exampleOutput: '1994',
  },
  {
    id: 5,
    title: "Longest Common Prefix",
    question: "Find longest common prefix among strings.",
    description: "Write a function to find the longest common prefix string amongst an array of strings. Return empty if none.",
    inputDescription: "strs: string[]",
    outputDescription: "string",
    difficulty: "Easy",
    acceptance: "39.9%",
    exampleInput: 'strs = ["flower","flow","flight"]',
    exampleOutput: '"fl"',
  },
  {
    id: 6,
    title: "Valid Parentheses",
    question: "Check if parentheses string is valid.",
    description: "Given a string s containing just the characters '(',')','{','}','[' and ']', determine if it’s valid.",
    inputDescription: "s: string",
    outputDescription: "boolean",
    difficulty: "Easy",
    acceptance: "41.1%",
    exampleInput: 's = "()[]{}"',
    exampleOutput: 'true',
  },
  {
    id: 7,
    title: "Merge Two Sorted Lists",
    question: "Merge two sorted linked lists.",
    description: "Merge two sorted linked lists and return it as a sorted list.",
    inputDescription: "l1: ListNode, l2: ListNode",
    outputDescription: "ListNode",
    difficulty: "Easy",
    acceptance: "57.8%",
    exampleInput: 'l1 = [1,2,4], l2 = [1,3,4]',
    exampleOutput: '[1,1,2,3,4,4]',
  },
  {
    id: 8,
    title: "Max Subarray",
    question: "Find subarray with maximum sum.",
    description: "Find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.",
    inputDescription: "nums: number[]",
    outputDescription: "number",
    difficulty: "Medium",
    acceptance: "49.2%",
    exampleInput: 'nums = [-2,1,-3,4,-1,2,1,-5,4]',
    exampleOutput: '6',
  },
  {
    id: 9,
    title: "Length of Last Word",
    question: "Return length of last word in a string.",
    description: "Given a string s consisting of words and spaces, return the length of the last word in the string.",
    inputDescription: "s: string",
    outputDescription: "number",
    difficulty: "Easy",
    acceptance: "39.5%",
    exampleInput: 's = "Hello World "',
    exampleOutput: '5',
  },
  {
    id: 10,
    title: "Plus One",
    question: "Add one to a number represented by digits.",
    description: "Given a large integer represented as an integer array digits, increment one and return the array.",
    inputDescription: "digits: number[]",
    outputDescription: "number[]",
    difficulty: "Easy",
    acceptance: "43.7%",
    exampleInput: 'digits = [1,2,3]',
    exampleOutput: '[1,2,4]',
  },
  {
    id: 11,
    title: "Add Binary",
    question: "Add two binary strings.",
    description: "Given two binary strings, return their sum (also a binary string).",
    inputDescription: "a: string, b: string",
    outputDescription: "string",
    difficulty: "Easy",
    acceptance: "52.1%",
    exampleInput: 'a = "11", b = "1"',
    exampleOutput: '"100"',
  },
  {
    id: 12,
    title: "Sqrt(x)",
    question: "Compute integer square root.",
    description: "Implement int sqrt(int x). Compute and return the square root of x, truncated to integer.",
    inputDescription: "x: number",
    outputDescription: "number",
    difficulty: "Easy",
    acceptance: "39.4%",
    exampleInput: 'x = 8',
    exampleOutput: '2',
  },
  {
    id: 13,
    title: "Climbing Stairs",
    question: "Count ways to climb n stairs.",
    description: "Each time you can climb 1 or 2 steps. Given n, return number of ways to reach the top.",
    inputDescription: "n: number",
    outputDescription: "number",
    difficulty: "Easy",
    acceptance: "56.2%",
    exampleInput: 'n = 5',
    exampleOutput: '8',
  },
  {
    id: 14,
    title: "Best Time to Buy and Sell Stock",
    question: "Maximize profit from one transaction.",
    description: "Given prices array, find max profit by choosing a buy and sell day. You cannot sell before you buy.",
    inputDescription: "prices: number[]",
    outputDescription: "number",
    difficulty: "Easy",
    acceptance: "54.3%",
    exampleInput: 'prices = [7,1,5,3,6,4]',
    exampleOutput: '5',
  },
  {
    id: 15,
    title: "Valid Palindrome",
    question: "Check if string is palindrome ignoring non‑alphanumeric.",
    description: "Given a string, determine if it reads the same forwards and backwards, ignoring non-alphanumeric and case.",
    inputDescription: "s: string",
    outputDescription: "boolean",
    difficulty: "Easy",
    acceptance: "44.6%",
    exampleInput: 's = "A man, a plan, a canal: Panama"',
    exampleOutput: 'true',
  }
];

export { questions1 };
